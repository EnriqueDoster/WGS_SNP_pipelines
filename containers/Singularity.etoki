Bootstrap: docker
From: debian:jessie-slim

#Includes cfsan-snp-pipeline smalt picard varscan tabix bcftools bowtie2 bwa gatk libdeflate samtools

%environment
    export LC_ALL=C

%post
    apt update \
    && apt install -y --no-install-recommends \
    build-essential ca-certificates sudo tcsh\
    git make automake autoconf wget gzip unzip sed\
    zlib1g-dev curl libbz2-dev locales libncurses5-dev liblzma-dev libcurl4-openssl-dev software-properties-common apt-transport-https\
    python3-pip python3-docopt python3-pytest python-dev python3-dev\
    libcurl4-openssl-dev libssl-dev zlib1g-dev fonts-texgyre \
    gcc g++ gfortran libblas-dev liblapack-dev dos2unix\
    r-base-core r-recommended hmmer\
    && rm -rf /var/lib/apt/lists/*

    # Not my favorite workaround, but to get cfsan snp to work with samtools, we have to change which libncurses library is used. Problem is anaconda doesn't have the right version of samtools.
    sudo ln -s /lib/x86_64-linux-gnu/libncursesw.so.5  /lib/x86_64-linux-gnu/libncursesw.so.6

    #Installing Anaconda 2 and Conda 4.5.11
    wget -c https://repo.continuum.io/archive/Anaconda2-5.3.0-Linux-x86_64.sh
    sh Anaconda2-5.3.0-Linux-x86_64.sh -bfp /usr/local

    # add bioconda channels
    conda config --add channels conda-forge
    conda config --add channels bioconda
    conda config --add channels anaconda
    conda config --add channels etetoolkit
 

    # usearch will have to be linked using the nextflow code


    # install bulk of bioinformatic tools required by enterobase (ETOKI), "flye" only works with python 2.7
    conda install python=3.5 ete3 numba numpy pandas scikit-learn samtools bwa gatk bowtie2 kraken2 raxml fasttree rapidnj bbmap mmseqs2 blast spades megahit pilon minimap2 last trf diamond psutil
    
    
    cd /usr/local/
    
    # Download EToKi github repository
    git clone https://github.com/zheminzhou/EToKi.git
    chmod +x /usr/local/EToKi/EToKi.py
    echo 'export PATH=$PATH:/usr/local/EToKi/' >> $SINGULARITY_ENVIRONMENT
    
    # Install pilercr
    wget https://www.drive5.com/pilercr/pilercr1.06.tar.gz
    tar -xzvf pilercr1.06.tar.gz
    cd pilercr1.06/
    make
    #echo 'export PATH=$PATH:/usr/local/pilercr1.06/' >> $SINGULARITY_ENVIRONMENT
    cd ../
    #ln -s /usr/local/pilercr1.06/pilercr /usr/local/EToKi/externals/


    # Install raxml
    mkdir install_raxml
    cd install_raxml
    wget https://github.com/amkozlov/raxml-ng/releases/download/0.9.0/raxml-ng_v0.9.0_linux_x86_64.zip
    unzip raxml-ng_v0.9.0_linux_x86_64.zip
    #ln -s /usr/local/install_raxml/raxml-ng /usr/local/EToKi/externals/
    cd ../
    
    
    
    ## Download github repository with Usearch and GATK executables
    git clone https://github.com/EnriqueDoster/sing_biotools.git
    mv /usr/local/sing_biotools/bin/GenomeAnalysisTK.jar /usr/local/bin/GenomeAnalysisTK.jar
    #ln -s /usr/local/sing_biotools/bin/GenomeAnalysisTK.jar /usr/local/EToKi/externals/gatk-package-4.1.0.0-local.jar
    
    
    
    ## Add all tools to EToKi external location
    
    
    #ln -s /usr/local/bin/* /usr/local/EToKi/externals/
    
    
    
    
    
    # Make sure all the tools have the right permissions to use the tools
    chmod -R 777 /usr/local/
    chmod -R 777 /usr/local/EToKi/

%test
    # Etoki installation
    #python3 /usr/local/EToKi/EToKi.py configure --usearch /usr/local/sing_biotools/bin/usearch11.0.667_i86linux32 --path bbduk=/usr/local/bin/bbduk.sh 
    #python3 /usr/local/EToKi/EToKi.py configure --path bbmerge=/usr/local/bin/bbmerge.sh 
    #python3 /usr/local/EToKi/EToKi.py configure --path blastn=/usr/local/bin/blastn
    #python3 /usr/local/EToKi/EToKi.py configure --path bowtie2=/usr/local/bin/bowtie2
    #python3 /usr/local/EToKi/EToKi.py configure --path bowtie2build=/usr/local/bin/bowtie2-build 
    #python3 /usr/local/EToKi/EToKi.py configure --path bwa=/usr/local/bin/bwa 
    #python3 /usr/local/EToKi/EToKi.py configure --path diamond=/usr/local/bin/diamond 
    #python3 /usr/local/EToKi/EToKi.py configure --path gatk=/usr/local/bin/GenomeAnalysisTK.jar 
    #python3 /usr/local/EToKi/EToKi.py configure --path kraken2=/usr/local/bin/kraken2 
    #python3 /usr/local/EToKi/EToKi.py configure --path lastal=/usr/local/bin/lastal 
    #python3 /usr/local/EToKi/EToKi.py configure --path lastdb=/usr/local/bin/lastdb 
    #python3 /usr/local/EToKi/EToKi.py configure --path makeblastdb=/usr/local/bin/makeblastdb 
    #python3 /usr/local/EToKi/EToKi.py configure --path megahit=/usr/local/bin/megahit 
    #python3 /usr/local/EToKi/EToKi.py configure --path mmseqs=/usr/local/bin/mmseqs 
    #python3 /usr/local/EToKi/EToKi.py configure --path raxml_ng=/usr/local/install_raxml/raxml-ng 
    #python3 /usr/local/EToKi/EToKi.py configure --path repair=/usr/local/bin/repair.sh 
    #python3 /usr/local/EToKi/EToKi.py configure --path spades=/usr/local/bin/spades.py
